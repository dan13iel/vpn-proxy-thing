This sounds like an interesting approach to creating a VPN-like solution using WebSockets. Let me help you think through this architecture.

Your approach has some advantages:
- WebSockets provide a persistent connection with low overhead
- Using HTTP/HTTPS proxy on localhost simplifies client configuration
- Bypasses some common VPN protocol implementation complexities

Let me sketch out how this would work technically:

1. Client setup:
   - Local HTTP/HTTPS proxy server running on localhost (e.g., 127.0.0.1:8080)
   - WebSocket client connecting to your remote server
   - Browser/applications configured to use the local proxy

2. Data flow:
   - Local application sends HTTP request to localhost proxy
   - Proxy captures request and forwards it over WebSocket to server
   - Server receives data, performs the HTTP request to the actual destination
   - Server sends response back through WebSocket
   - Client proxy delivers response to the local application

Considerations:
- WebSocket client/server code
- Local proxy implementation
- Authentication and security considerations
- Performance optimization ideas